# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'open-uri'
require './env'

universalforwarder_path = "../common/downloads/universalforwarder.tgz"

if not File.exist?(universalforwarder_path) or File.size(universalforwarder_path) == 0
  open(universalforwarder_path, "w") do |out|
    RELEASE_URL = ENV['RELEASE_URL']
    response = URI.open("https://download.splunk.com/products/universalforwarder/releases/#{RELEASE_URL}").read
    out.write(response)
  end
end

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"

  config.vm.synced_folder '.', '/vagrant', disabled: true

  config.vm.provision "file", before: :all, source: "./forwarder-compose.yml",
                      destination: "/tmp/docker-compose.yml"
  config.vm.provision "file", before: :all, source: "./rabbitmq-consumer",
                      destination: "/tmp/rabbitmq-consumer"
  config.vm.provision "file", before: :all, source: "./uf",
                      destination: "/tmp/uf"
  config.vm.provision "outputs.conf", before: :all, type: "shell", path: "../common/configs/outputs.py"
  config.vm.provision "file", before: :all, source: universalforwarder_path,
                      destination: "/tmp/uf/universalforwarder.tgz"


  config.vm.provider "virtualbox" do |v|
    v.memory = 512
    v.cpus = 1
  end


  config.vm.provision "set_date", before: :all, type: "shell", inline: <<-SHELL
    timedatectl set-timezone Europe/Madrid
  SHELL
  config.vm.provision "install_docker", before: :all, path: "../common/scripts/install_docker.sh", type: "shell"
  config.vm.provision :docker_compose, after: :all, yml: "/tmp/docker-compose.yml", run: "always"


  (1..1).each do |i|
    config.vm.define "uf#{i}" do |uf|
      uf.vm.network :private_network, ip: "192.168.33.3#{i}"
      uf.vm.provider :virtualbox do |vb|
        vb.name = "splunk-uf-#{i}"
      end
      uf.vm.provision "server.conf", type: "shell", path: "../common/configs/server.py", args: "splunk_uf_#{i}"
    end
  end
end