# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"

  config.vm.synced_folder '.', '/vagrant', disabled: true

  config.vm.provision   "file", source: "./Dockerfile", 
                        destination: "/tmp/Dockerfile"
  config.vm.provision   "file", source: "./configs/splunk-launch.conf", 
                        destination: "/tmp/splunk-launch.conf"
  config.vm.provision   "file", source: "./configs/user-seed.conf",
                        destination: "/tmp/user-seed.conf"

  config.vm.provision "docker" do |d|
    d.build_image "/tmp", args: '--build-arg="RELEASE_URL=7.3.6/linux/splunk-7.3.6-47d8552a4d84-Linux-x86_64.tgz" --target=splunk-enterprise -t splunk-enterprise'
  end

  config.vm.provider "virtualbox" do |v|
    v.memory = 1024
    v.cpus = 1
  end


  config.vm.define "master" do |man|
    man.vm.network :private_network, ip: "192.168.33.2"
    man.vm.provision  "file", source: "./configs/master/server.conf", 
                      destination: "/tmp/server.conf"
    man.vm.provider :virtualbox do |vb|
      vb.name = "splunk-master"
    end
    man.vm.provision "docker" do |d|
      d.build_image "/tmp", args: '--target=splunk-instance -t splunk-master'
      d.run "splunk-master", image: "splunk-master", args: "--network host --mount source=splunkinstshclvol,target=/usr/local/splunk/etc/shcluster/apps --mount source=splunkinstmappsvol,target=/usr/local/splunk/etc/master-apps --mount source=splunkinstlogsvol,target=/usr/local/splunk/var/log/splunk"
    end
  end

  (2..2).each do |i|
    config.vm.define "sh#{i}" do |shclmember|
      shclmember.vm.network :private_network, ip: "192.168.33.1#{i}"
      shclmember.vm.provision "file", source: "./configs/shc-member/server.conf", 
                              destination: "/tmp/server.conf"
      shclmember.vm.provider :virtualbox do |vb|
        vb.name = "splunk-sh-#{i}"
      end
      shclmember.vm.provision "shell", inline: <<-SHELL
        echo "\nmgmt_uri = https://192.168.33.1#{i}:8089" >> /tmp/server.conf
        echo "mode = member" >> /tmp/server.conf
        echo "" >> /tmp/server.conf
        echo "[general]" >> /tmp/server.conf
        echo serverName = splunk_sh_#{i} >> /tmp/server.conf
      SHELL
      shclmember.vm.provision "docker" do |d|
        d.build_image "/tmp", args: '--target=splunk-instance -t splunk-sh'
        d.run "splunk-sh", image: "splunk-sh", args: "--network host --mount source=splunkinstlogsvol,target=/usr/local/splunk/var/log/splunk --mount source=splunkinstappsvol,target=/usr/local/splunk/etc/apps"
      end
    end
  end

  config.vm.define "sh1" do |shclcaptain|
    shclcaptain.vm.network :private_network, ip: "192.168.33.11"
    shclcaptain.vm.provision  "file", source: "./configs/shc-member/server.conf", 
                              destination: "/tmp/server.conf"
    shclcaptain.vm.provider :virtualbox do |vb|
      vb.name = "splunk-sh-1"
    end
    shclcaptain.vm.provision "shell", inline: <<-SHELL
      echo "\nmgmt_uri = https://192.168.33.11:8089" >> /tmp/server.conf
      echo "mode = captain" >> /tmp/server.conf
      echo "" >> /tmp/server.conf
      echo "[general]" >> /tmp/server.conf
      echo serverName = splunk_sh_1 >> /tmp/server.conf
    SHELL
    shclcaptain.vm.provision "docker" do |d|
      d.build_image "/tmp", args: '--target=splunk-instance -t splunk-sh'
      d.run "splunk-sh", image: "splunk-sh", args: "--network host --mount source=splunkinstlogsvol,target=/usr/local/splunk/var/log/splunk --mount source=splunkinstappsvol,target=/usr/local/splunk/etc/apps"
    end
  end

  config.vm.define "test_idx" do |idx|
    idx.vm.network :private_network, ip: "192.168.33.5"
    idx.vm.provider :virtualbox do |vb|
      vb.name = "splunk-idx-test"
    end
    idx.vm.provision "shell", inline: <<-SHELL
      echo "[general]" >> /tmp/server.conf
      echo serverName = splunk_idx_test >> /tmp/server.conf
    SHELL
    idx.vm.provision "docker" do |d|
      d.build_image "/tmp", args: '--target=splunk-instance -t splunk-idx'
      d.run "splunk-idx", image: "splunk-idx", args: "--network host --mount source=splunkinstlogsvol,target=/usr/local/splunk/var/log/splunk --mount source=splunkinstappsvol,target=/usr/local/splunk/etc/apps"
    end
  end

  (1..2).each do |i|
    config.vm.define "idx#{i}" do |idx|
      idx.vm.network :private_network, ip: "192.168.33.2#{i}"
      idx.vm.provision  "file", source: "./configs/idx/server.conf", 
                        destination: "/tmp/server.conf"
      idx.vm.provision  "file", source: "./configs/idx/inputs.conf", 
                        destination: "/tmp/inputs.conf"
      idx.vm.provider :virtualbox do |vb|
        vb.name = "splunk-idx-#{i}"
      end
      idx.vm.provision "shell", inline: <<-SHELL
        echo "" >> /tmp/server.conf
        echo "[general]" >> /tmp/server.conf
        echo serverName = splunk_idx_#{i} >> /tmp/server.conf
      SHELL
      idx.vm.provision "docker" do |d|
        d.build_image "/tmp", args: '--target=idx -t splunk-idx'
        d.run "splunk-idx", image: "splunk-idx", args: "--network host --mount source=splunkinstlogsvol,target=/usr/local/splunk/var/log/splunk --mount source=splunkinstappsvol,target=/usr/local/splunk/etc/apps"
      end
    end
  end
end
