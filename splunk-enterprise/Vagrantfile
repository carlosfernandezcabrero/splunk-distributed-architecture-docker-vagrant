# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'open-uri'
require './env'

spl_enterprise_path = "../common/downloads/splunk-enterprise.tgz"

if not File.exist?(spl_enterprise_path) or File.size(spl_enterprise_path) == 0
  open(spl_enterprise_path, "w") do |out|
    RELEASE_URL = ENV['RELEASE_URL']
    spl_ent = URI.open("https://download.splunk.com/products/splunk/releases/#{RELEASE_URL}").read
    out.write(spl_ent)
  end
end

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"

  config.vm.synced_folder '.', '/vagrant', disabled: true

  config.vm.provision   "file", source: "./Dockerfile", 
                        destination: "/tmp/Dockerfile"
  config.vm.provision   "file", source: "./configs/splunk-launch.conf", 
                        destination: "/tmp/splunk-launch.conf"
  config.vm.provision   "file", source: "./configs/user-seed.conf",
                        destination: "/tmp/user-seed.conf"
  config.vm.provision   "file", source: "../common/downloads/splunk-enterprise.tgz",
                        destination: "/tmp/splunk-enterprise.tgz"


  config.vm.provider "virtualbox" do |v|
    v.memory = 1024
    v.cpus = 1
  end


  config.vm.provision "set_date", before: :all, type: "shell", inline: <<-SHELL
    timedatectl set-timezone Europe/Madrid
  SHELL
  config.vm.provision "install_docker", before: :all, path: "../common/scripts/install_docker.sh", type: "shell"


  config.vm.define "master" do |man|
    man.vm.network :private_network, ip: "192.168.33.2"
    man.vm.provision  "file", source: "./configs/master/server.conf", 
                      destination: "/tmp/server.conf"
    man.vm.provider :virtualbox do |vb|
      vb.name = "splunk-master"
    end
    man.vm.provision "set_servername", type: "shell", path: "../common/scripts/set_servername.sh", args: "splunk-master"
    man.vm.provision "docker" do |d|
      d.build_image "/tmp", args: '--target=splunk-enterprise -t splunk-master'
      d.run "splunk-master", image: "splunk-master", args: "--network host --mount source=splunkinstshclvol,target=/usr/local/splunk/etc/shcluster/apps --mount source=splunkinstmappsvol,target=/usr/local/splunk/etc/master-apps --mount source=splunkinstdepvol,target=/usr/local/splunk/etc/deployment-apps --mount source=splunkinstlocalvol,target=/usr/local/splunk/etc/system/local --mount source=splunkinstlogsvol,target=/usr/local/splunk/var/log/splunk"
    end
  end

  (2..2).each do |i|
    config.vm.define "sh#{i}" do |shclmember|
      shclmember.vm.network :private_network, ip: "192.168.33.1#{i}"
      shclmember.vm.provision "file", source: "./configs/shc-member/server.conf", 
                              destination: "/tmp/server.conf"
      shclmember.vm.provider :virtualbox do |vb|
        vb.name = "splunk-sh-#{i}"
      end
      shclmember.vm.provision "shell", inline: <<-SHELL
        echo "\nmgmt_uri = https://192.168.33.1#{i}:8089" >> /tmp/server.conf
        echo "mode = member" >> /tmp/server.conf
        echo "" >> /tmp/server.conf
        echo "[general]" >> /tmp/server.conf
        echo serverName = splunk_sh_#{i} >> /tmp/server.conf
      SHELL
      shclmember.vm.provision "set_servername", type: "shell", path: "../common/scripts/set_servername.sh", args: "splunk_sh_#{i}"
      shclmember.vm.provision "docker" do |d|
        d.build_image "/tmp", args: '--target=splunk-enterprise -t splunk-sh'
        d.run "splunk-sh", image: "splunk-sh", args: "--network host --mount source=splunkinstlogsvol,target=/usr/local/splunk/var/log/splunk"
      end
    end
  end

  config.vm.define "sh1" do |shclcaptain|
    shclcaptain.vm.network :private_network, ip: "192.168.33.11"
    shclcaptain.vm.provision  "file", source: "./configs/shc-member/server.conf", 
                              destination: "/tmp/server.conf"
    shclcaptain.vm.provider :virtualbox do |vb|
      vb.name = "splunk-sh-1"
    end
    shclcaptain.vm.provision "shell", inline: <<-SHELL
      echo "\nmgmt_uri = https://192.168.33.11:8089" >> /tmp/server.conf
      echo "mode = captain" >> /tmp/server.conf
      echo "" >> /tmp/server.conf
      echo "[general]" >> /tmp/server.conf
      echo serverName = splunk_sh_1 >> /tmp/server.conf
    SHELL
    shclcaptain.vm.provision "set_servername", type: "shell", path: "../common/scripts/set_servername.sh", args: "splunk_sh_1"
    shclcaptain.vm.provision "docker" do |d|
      d.build_image "/tmp", args: '--target=splunk-enterprise -t splunk-sh'
      d.run "splunk-sh", image: "splunk-sh", args: "--network host --mount source=splunkinstlogsvol,target=/usr/local/splunk/var/log/splunk"
    end
  end

  config.vm.define "test_idx" do |tidx|
    tidx.vm.provision  "file", source: "./configs/idx/inputs.conf", 
                        destination: "/tmp/inputs.conf"
    tidx.vm.network :private_network, ip: "192.168.33.5"
    tidx.vm.provider :virtualbox do |vb|
      vb.name = "splunk-idx-test"
    end
    tidx.vm.provision "shell", inline: <<-SHELL
      echo "[general]" >> /tmp/server.conf
      echo serverName = splunk_idx_test >> /tmp/server.conf
      echo "" >> /tmp/server.conf
      echo "[replication_port://8080]" >> /tmp/server.conf
    SHELL
    tidx.vm.provision "set_servername", type: "shell", path: "../common/scripts/set_servername.sh", args: "splunk_idx_test"
    tidx.vm.provision "docker" do |d|
      d.build_image "/tmp", args: '--target=idx -t splunk-idx'
      d.run "splunk-idx", image: "splunk-idx", args: "--network host --mount source=splunkinstlogsvol,target=/usr/local/splunk/var/log/splunk --mount source=splunkinstappsvol,target=/usr/local/splunk/etc/apps --mount source=splunkinstdatavol,target=/usr/local/splunk/var/lib/splunk"
    end
  end

  config.vm.define "test_sh" do |tsh|
    tsh.vm.network :private_network, ip: "192.168.33.6"
    tsh.vm.provider :virtualbox do |vb|
      vb.name = "splunk-sh-test"
    end
    tsh.vm.provision "set_servername", type: "shell", path: "../common/scripts/set_servername.sh", args: "splunk_sh_test"
    tsh.vm.provision "docker" do |d|
      d.build_image "/tmp", args: '--target=test-sh -t splunk-sh'
      d.run "splunk-sh", image: "splunk-sh", args: "--network host --mount source=splunkinstlogsvol,target=/usr/local/splunk/var/log/splunk --mount source=splunkinstappsvol,target=/usr/local/splunk/etc/apps"
    end
  end

  File.open('../common/files/indexers.txt') do |f|
    f.each_line do |server|
      server = server.gsub("\n","")
      num_idx = server[-1]

      config.vm.define "idx#{num_idx}" do |idx|
        idx.vm.network :private_network, ip: "#{server}"
        idx.vm.provision  "file", source: "./configs/idx/server.conf", 
                          destination: "/tmp/server.conf"
        idx.vm.provision  "file", source: "./configs/idx/inputs.conf", 
                          destination: "/tmp/inputs.conf"
        idx.vm.provider :virtualbox do |vb|
          vb.name = "splunk-idx-#{num_idx}"
        end
        idx.vm.provision "set_servername", type: "shell", path: "../common/scripts/set_servername.sh", args: "splunk_idx_#{num_idx}"
        idx.vm.provision "docker" do |d|
          d.build_image "/tmp", args: '--target=idx -t splunk-idx'
          d.run "splunk-idx", image: "splunk-idx", args: "--network host --mount source=splunkinstlogsvol,target=/usr/local/splunk/var/log/splunk --mount source=splunkinstdatavol,target=/usr/local/splunk/var/lib/splunk"
        end
      end
    end
  end

  config.vm.define "hf" do |hf|
    hf.vm.network :private_network, ip: "192.168.33.3"
    hf.vm.provision   "file", source: "./../common/configs/outputs.conf", 
                      destination: "/tmp/outputs.conf"
    hf.vm.provider :virtualbox do |vb|
      vb.name = "splunk-hf"
    end
    hf.vm.provision "set_servername", type: "shell", path: "../common/scripts/set_servername.sh", args: "splunk_hf"
    hf.vm.provision "docker" do |d|
      d.build_image "/tmp", args: '--target=hf -t splunk-hf'
      d.run "splunk-hf", image: "splunk-hf", args: "--network host --mount source=splunkinstlogsvol,target=/usr/local/splunk/var/log/splunk --mount source=splunkinstappsvol,target=/usr/local/splunk/etc/apps"
    end
  end
end
